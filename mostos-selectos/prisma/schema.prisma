// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


enum Status {
  ACTIVO
  INACTIVO
}

enum Role {
  USER
  ADMIN
}

model Account {
  id                String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId            String  @db.Uuid
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           Role      @default(USER)
  state          Status    @default(ACTIVO)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now()) @updatedAt
  accounts       Account[]
  reviews        Review[]
}

model Product {
  id            String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String
  description   String
  price         Float
  reference     String
  stock         Int
  subcategory   Subcategory      @relation(fields: [subcategoryId], references: [id])
  subcategoryId String           @db.Uuid
  images        Image_Producto[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @default(now()) @updatedAt
  Review        Review[]
}

model Review {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String   @db.Uuid
  productId   String   @db.Uuid
  comment     String
  createdDate DateTime @default(now())
  product     Product  @relation(fields: [productId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model Image_Producto {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  image      String
  productoId String  @db.Uuid
  product    Product @relation(fields: [productoId], references: [id])
}

model Subcategory {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String    @db.Uuid
  products   Product[]
}

model Category {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  subcategorie Subcategory[]
}

//https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/many-to-many-relations
